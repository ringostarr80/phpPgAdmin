name: PHP

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        version: ['8.1', '8.2', '8.3', '8.4']

    name: PHP ${{ matrix.version }}

    container:
      image: php:${{ matrix.version }}

    services:
      selenium:
        image: selenium/standalone-chrome
        ports:
          - 4444:4444
        options: --shm-size=2gb

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: phpPgAdmin
      
      - name: List current directory
        run: |
          echo "Current directory: $(pwd)"
          echo "Repository content:"
          ls -R
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: List current directory
        run: ls -la
        
      - name: Install NodeJS dependencies
        run: npm install
      
      - name: List current directory
        run: ls -la

      - name: Install Reuired Packages
        run: apt-get update && apt-get install -y libpq-dev libzip-dev zip unzip
      
      - name: Install PHP Extensions
        run: docker-php-ext-install gettext pgsql zip
      
      - name: Install Composer
        run: ./composer-installer.sh

      - name: List current directory
        run: ls -la

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHP Syntax Checker
        run: composer run-script dev:lint:php

      - name: Run PHP Style Checker
        run: composer run-script dev:lint:phpcs

      - name: Run PHP Static Analysis
        run: composer run-script dev:analyze:phpstan-${{ matrix.version }}

      - name: Check Selenium readiness
        run: curl -v -s http://selenium:4444/wd/hub/status
      
      - name: List current directory
        run: ls -la

      - name: Run PHP Tests with Code Coverage
        run: composer run-script dev:test:acceptance
        env:
          BROWSER: chrome
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        if: ${{ matrix.version == '8.1' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ringostarr80/phpPgAdmin
      
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-output-${{ matrix.version }}
          path: tests/_output