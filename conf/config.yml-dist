# An example server. Create as many of these as you wish.
servers:
  # Display name for the server on the login screen
  - desc: PostgreSQL
    # Hostname or IP address for server.  Use '' for UNIX domain socket. use 'localhost' for TCP/IP connection on this computer
    host:
    # Database port on server (5432 is the PostgreSQL default)
    port: 5432
    # Database SSL mode
    # Possible options: disable, allow, prefer, require
    # To require SSL on older servers use option: legacy
    # To ignore the SSL mode, use option: unspecified
    sslmode: allow
    # Change the default database only if you cannot connect to template1.
    # For a PostgreSQL 8.1+ server, you can set this to 'postgres'.
    defaultdb: template1
    # Specify the path to the database dump utilities for this server.
    # You can set these to '' if no dumper is available.
    pg_dump_path: /usr/bin/pg_dump
    pg_dumpall_path: /usr/bin/pg_dumpall
    # You can apply specific theme depending on servers, users and databases
    # The priority order is:
    # 1. the theme defined for a server
    # 2. the theme defined for a database apply over the server one
    # 3. the theme defined for a user apply over the database one
#    theme:
#      default: default
#    user:
#      specific_user: default
#    db:
#      specific_db: default
# Example for a second server (PostgreSQL for Windows)
#  - desc: Test Server
#    host: "127.0.0.1"
#    port: 5432
#    sslmode: allow
#    defaultdb: template1
#    pg_dump_path: 'C:\Program Files\PostgreSQL\8.0\bin\pg_dump.exe'
#    pg_dumpall_path: 'C:\Program Files\PostgreSQL\8.0\bin\pg_dumpall.exe'

# Groups definition
# Groups allow administrators to logicaly group servers together under
# group nodes in the left browser tree
srv_groups:
  # The first group description
#  - desc: group one
    # Add here servers indexes belonging to the first group
#    servers: [0, 1, 2]
  # A server can belong to multi groups. Here server 1 is referenced in both
  # 'group one' and 'group two'
#  - desc: group two
#    servers: [3, 1]
  # A group can be nested in one or more existing groups using the 'parents'
  # parameter. Here the group 'group three' contains only one server and will
  # appear as a subgroup in both 'group one' and 'group two':
#  - desc: group three
#    servers: [4]
#    parents: [0, 1]

# Warning: Only groups with no parents appears at the root of the tree.

# Default language. E.g.: 'english', 'polish', etc.  See lang/ directory
# for all possibilities. If you specify 'auto' (the default) it will use
# your browser preference.
default_lang: auto

# If extra session security is true, then PHP's session cookies will have
# SameSite cookie flags set to prevent CSRF attacks.  If you're using
# auto-start sessions, autostarted sessions will be destroyed and
# restarted with SameSite on.  If this this solution is not acceptable for
# your situation, you will need to either turn off auot-start sessions, or
# turn off secure sessions.  Versions of PHP below 7.3 do not have access
# to this feature and will be vulnerable to CSRF attacks.
extra_session_security: true

# AutoComplete uses AJAX interaction to list foreign key values
# on insert fields. It currently only works on single column
# foreign keys. You can choose one of the following values:
# 'default on' enables AutoComplete and turns it on by default.
# 'default off' enables AutoComplete but turns it off by default.
# 'disable' disables AutoComplete.
autocomplete: default on

# If extra login security is true, then logins via phpPgAdmin with no
# password or certain usernames (pgsql, postgres, root, administrator)
# will be denied. Only set this false once you have read the FAQ and
# understand how to change PostgreSQL's pg_hba.conf to enable
# passworded local connections.
extra_login_security: true

# Only show owned databases?
# Note: This will simply hide other databases in the list - this does
# not in any way prevent your users from seeing other database by
# other means. (e.g. Run 'SELECT * FROM pg_database' in the SQL area.)
owned_only: false

# Display comments on objects?  Comments are a good way of documenting
# a database, but they do take up space in the interface.
show_comments: true

# Display "advanced" objects? Setting this to true will show
# aggregates, types, operators, operator classes, conversions,
# languages and casts in phpPgAdmin. These objects are rarely
# administered and can clutter the interface.
show_advanced: false

# Display "system" objects?
show_system: false

# Minimum length users can set their password to.
min_password_length: 1

# Width of the left frame in pixels (object browser)
left_width: 200

# Which look & feel theme to use
theme: default

# Show OIDs when browsing tables?
# Only supported in versions <=11
show_oids: false

# Max rows to show on a page when browsing record sets
max_rows: 30

# Max chars of each field to display by default in browse mode
max_chars: 50

# Base URL for PostgreSQL documentation.
# '%s', if present, will be replaced with the PostgreSQL version
# (e.g. 8.4 )
help_base: http://www.postgresql.org/docs/%s/interactive/

# Configuration for ajax scripts
# Time in seconds. If set to 0, refreshing data using ajax will be disabled (locks and activity pages)
ajax_refresh: 3

# Plugins management
# Add plugin names to the following array to activate them
# Example:
#   plugins: ['Example', 'Slony']
plugins: []